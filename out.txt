 👮🏻‍♂️ File already exists. Do not overwrite: /root/data/noaa-goes16/ABI-L2-MCMIPC/2024/311/00/OR_ABI-L2-MCMIPC-M6_G16_s20243110001174_e20243110003547_c20243110004084.nc
 👮🏻‍♂️ File already exists. Do not overwrite: /root/data/noaa-goes16/ABI-L2-MCMIPC/2024/311/00/OR_ABI-L2-MCMIPC-M6_G16_s20243110006174_e20243110008547_c20243110009063.nc
 👮🏻‍♂️ File already exists. Do not overwrite: /root/data/noaa-goes16/ABI-L2-MCMIPC/2024/311/00/OR_ABI-L2-MCMIPC-M6_G16_s20243110016174_e20243110018558_c20243110019071.nc
 👮🏻‍♂️ File already exists. Do not overwrite: /root/data/noaa-goes16/ABI-L2-MCMIPC/2024/311/00/OR_ABI-L2-MCMIPC-M6_G16_s20243110011174_e20243110013547_c20243110014082.nc 👮🏻‍♂️ File already exists. Do not overwrite: /root/data/noaa-goes16/ABI-L2-MCMIPC/2024/311/00/OR_ABI-L2-MCMIPC-M6_G16_s20243110021174_e20243110023547_c20243110024082.nc
 👮🏻‍♂️ File already exists. Do not overwrite: /root/data/noaa-goes16/ABI-L2-MCMIPC/2024/311/00/OR_ABI-L2-MCMIPC-M6_G16_s20243110026174_e20243110028547_c20243110029066.nc
 👮🏻‍♂️ File already exists. Do not overwrite: /root/data/noaa-goes16/ABI-L2-MCMIPC/2024/311/00/OR_ABI-L2-MCMIPC-M6_G16_s20243110036174_e20243110038547_c20243110039065.nc

 👮🏻‍♂️ File already exists. Do not overwrite: /root/data/noaa-goes16/ABI-L2-MCMIPC/2024/311/00/OR_ABI-L2-MCMIPC-M6_G16_s20243110031174_e20243110033547_c20243110034063.nc 👮🏻‍♂️ File already exists. Do not overwrite: /root/data/noaa-goes16/ABI-L2-MCMIPC/2024/311/00/OR_ABI-L2-MCMIPC-M6_G16_s20243110051174_e20243110053547_c20243110054070.nc

 👮🏻‍♂️ File already exists. Do not overwrite: /root/data/noaa-goes16/ABI-L2-MCMIPC/2024/311/00/OR_ABI-L2-MCMIPC-M6_G16_s20243110041174_e20243110043547_c20243110044056.nc 👮🏻‍♂️ File already exists. Do not overwrite: /root/data/noaa-goes16/ABI-L2-MCMIPC/2024/311/00/OR_ABI-L2-MCMIPC-M6_G16_s20243110046174_e20243110048547_c20243110049067.nc
 👮🏻‍♂️ File already exists. Do not overwrite: /root/data/noaa-goes16/ABI-L2-MCMIPC/2024/311/01/OR_ABI-L2-MCMIPC-M6_G16_s20243110106174_e20243110108547_c20243110109059.nc 👮🏻‍♂️ File already exists. Do not overwrite: /root/data/noaa-goes16/ABI-L2-MCMIPC/2024/311/00/OR_ABI-L2-MCMIPC-M6_G16_s20243110056174_e20243110058547_c20243110059060.nc 👮🏻‍♂️ File already exists. Do not overwrite: /root/data/noaa-goes16/ABI-L2-MCMIPC/2024/311/01/OR_ABI-L2-MCMIPC-M6_G16_s20243110101174_e20243110103553_c20243110104077.nc



 👮🏻‍♂️ File already exists. Do not overwrite: /root/data/noaa-goes16/ABI-L2-MCMIPC/2024/311/01/OR_ABI-L2-MCMIPC-M6_G16_s20243110111174_e20243110113553_c20243110114057.nc 👮🏻‍♂️ File already exists. Do not overwrite: /root/data/noaa-goes16/ABI-L2-MCMIPC/2024/311/01/OR_ABI-L2-MCMIPC-M6_G16_s20243110121174_e20243110123547_c20243110124060.nc
 👮🏻‍♂️ File already exists. Do not overwrite: /root/data/noaa-goes16/ABI-L2-MCMIPC/2024/311/01/OR_ABI-L2-MCMIPC-M6_G16_s20243110131174_e20243110133547_c20243110134069.nc

 👮🏻‍♂️ File already exists. Do not overwrite: /root/data/noaa-goes16/ABI-L2-MCMIPC/2024/311/01/OR_ABI-L2-MCMIPC-M6_G16_s20243110126174_e20243110128553_c20243110129069.nc 👮🏻‍♂️ File already exists. Do not overwrite: /root/data/noaa-goes16/ABI-L2-MCMIPC/2024/311/01/OR_ABI-L2-MCMIPC-M6_G16_s20243110136174_e20243110138547_c20243110139059.nc 👮🏻‍♂️ File already exists. Do not overwrite: /root/data/noaa-goes16/ABI-L2-MCMIPC/2024/311/01/OR_ABI-L2-MCMIPC-M6_G16_s20243110116174_e20243110118547_c20243110119063.nc 👮🏻‍♂️ File already exists. Do not overwrite: /root/data/noaa-goes16/ABI-L2-MCMIPC/2024/311/01/OR_ABI-L2-MCMIPC-M6_G16_s20243110141174_e20243110143559_c20243110144060.nc

 👮🏻‍♂️ File already exists. Do not overwrite: /root/data/noaa-goes16/ABI-L2-MCMIPC/2024/311/01/OR_ABI-L2-MCMIPC-M6_G16_s20243110156174_e20243110158547_c20243110159066.nc
 👮🏻‍♂️ File already exists. Do not overwrite: /root/data/noaa-goes16/ABI-L2-MCMIPC/2024/311/01/OR_ABI-L2-MCMIPC-M6_G16_s20243110151174_e20243110153559_c20243110154079.nc 👮🏻‍♂️ File already exists. Do not overwrite: /root/data/noaa-goes16/ABI-L2-MCMIPC/2024/311/01/OR_ABI-L2-MCMIPC-M6_G16_s20243110146174_e20243110148547_c20243110149070.nc



📦 Finished downloading [24] files to [/root/data/noaa-goes16/ABI-L2-MCMIPC].
📖💽 Reading (1/24) file from LOCAL COPY [/root/data/noaa-goes16/ABI-L2-MCMIPC/2024/311/00/OR_ABI-L2-MCMIPC-M6_G16_s20243110001174_e20243110003547_c20243110004084.nc]. 📖💽 Reading (2/24) file from LOCAL COPY [/root/data/noaa-goes16/ABI-L2-MCMIPC/2024/311/00/OR_ABI-L2-MCMIPC-M6_G16_s20243110006174_e20243110008547_c20243110009063.nc]. 📖💽 Reading (3/24) file from LOCAL COPY [/root/data/noaa-goes16/ABI-L2-MCMIPC/2024/311/00/OR_ABI-L2-MCMIPC-M6_G16_s20243110011174_e20243110013547_c20243110014082.nc]. 📖💽 Reading (4/24) file from LOCAL COPY [/root/data/noaa-goes16/ABI-L2-MCMIPC/2024/311/00/OR_ABI-L2-MCMIPC-M6_G16_s20243110016174_e20243110018558_c20243110019071.nc]. 📖💽 Reading (5/24) file from LOCAL COPY [/root/data/noaa-goes16/ABI-L2-MCMIPC/2024/311/00/OR_ABI-L2-MCMIPC-M6_G16_s20243110021174_e20243110023547_c20243110024082.nc]. 📖💽 Reading (6/24) file from LOCAL COPY [/root/data/noaa-goes16/ABI-L2-MCMIPC/2024/311/00/OR_ABI-L2-MCMIPC-M6_G16_s20243110026174_e20243110028547_c20243110029066.nc]. 📖💽 Reading (7/24) file from LOCAL COPY [/root/data/noaa-goes16/ABI-L2-MCMIPC/2024/311/00/OR_ABI-L2-MCMIPC-M6_G16_s20243110031174_e20243110033547_c20243110034063.nc]. 📖💽 Reading (8/24) file from LOCAL COPY [/root/data/noaa-goes16/ABI-L2-MCMIPC/2024/311/00/OR_ABI-L2-MCMIPC-M6_G16_s20243110036174_e20243110038547_c20243110039065.nc]. 📖💽 Reading (9/24) file from LOCAL COPY [/root/data/noaa-goes16/ABI-L2-MCMIPC/2024/311/00/OR_ABI-L2-MCMIPC-M6_G16_s20243110041174_e20243110043547_c20243110044056.nc]. 📖💽 Reading (10/24) file from LOCAL COPY [/root/data/noaa-goes16/ABI-L2-MCMIPC/2024/311/00/OR_ABI-L2-MCMIPC-M6_G16_s20243110046174_e20243110048547_c20243110049067.nc]. 📖💽 Reading (11/24) file from LOCAL COPY [/root/data/noaa-goes16/ABI-L2-MCMIPC/2024/311/00/OR_ABI-L2-MCMIPC-M6_G16_s20243110051174_e20243110053547_c20243110054070.nc]. 📖💽 Reading (12/24) file from LOCAL COPY [/root/data/noaa-goes16/ABI-L2-MCMIPC/2024/311/00/OR_ABI-L2-MCMIPC-M6_G16_s20243110056174_e20243110058547_c20243110059060.nc]. 📖💽 Reading (13/24) file from LOCAL COPY [/root/data/noaa-goes16/ABI-L2-MCMIPC/2024/311/01/OR_ABI-L2-MCMIPC-M6_G16_s20243110101174_e20243110103553_c20243110104077.nc]. 📖💽 Reading (14/24) file from LOCAL COPY [/root/data/noaa-goes16/ABI-L2-MCMIPC/2024/311/01/OR_ABI-L2-MCMIPC-M6_G16_s20243110106174_e20243110108547_c20243110109059.nc]. 📖💽 Reading (15/24) file from LOCAL COPY [/root/data/noaa-goes16/ABI-L2-MCMIPC/2024/311/01/OR_ABI-L2-MCMIPC-M6_G16_s20243110111174_e20243110113553_c20243110114057.nc]. 📖💽 Reading (16/24) file from LOCAL COPY [/root/data/noaa-goes16/ABI-L2-MCMIPC/2024/311/01/OR_ABI-L2-MCMIPC-M6_G16_s20243110116174_e20243110118547_c20243110119063.nc]. 📖💽 Reading (17/24) file from LOCAL COPY [/root/data/noaa-goes16/ABI-L2-MCMIPC/2024/311/01/OR_ABI-L2-MCMIPC-M6_G16_s20243110121174_e20243110123547_c20243110124060.nc]. 📖💽 Reading (18/24) file from LOCAL COPY [/root/data/noaa-goes16/ABI-L2-MCMIPC/2024/311/01/OR_ABI-L2-MCMIPC-M6_G16_s20243110126174_e20243110128553_c20243110129069.nc]. 📖💽 Reading (19/24) file from LOCAL COPY [/root/data/noaa-goes16/ABI-L2-MCMIPC/2024/311/01/OR_ABI-L2-MCMIPC-M6_G16_s20243110131174_e20243110133547_c20243110134069.nc]. 📖💽 Reading (20/24) file from LOCAL COPY [/root/data/noaa-goes16/ABI-L2-MCMIPC/2024/311/01/OR_ABI-L2-MCMIPC-M6_G16_s20243110136174_e20243110138547_c20243110139059.nc]. 📖💽 Reading (21/24) file from LOCAL COPY [/root/data/noaa-goes16/ABI-L2-MCMIPC/2024/311/01/OR_ABI-L2-MCMIPC-M6_G16_s20243110141174_e20243110143559_c20243110144060.nc]. 📖💽 Reading (22/24) file from LOCAL COPY [/root/data/noaa-goes16/ABI-L2-MCMIPC/2024/311/01/OR_ABI-L2-MCMIPC-M6_G16_s20243110146174_e20243110148547_c20243110149070.nc]. 📖💽 Reading (23/24) file from LOCAL COPY [/root/data/noaa-goes16/ABI-L2-MCMIPC/2024/311/01/OR_ABI-L2-MCMIPC-M6_G16_s20243110151174_e20243110153559_c20243110154079.nc]. 📖💽 Reading (24/24) file from LOCAL COPY [/root/data/noaa-goes16/ABI-L2-MCMIPC/2024/311/01/OR_ABI-L2-MCMIPC-M6_G16_s20243110156174_e20243110158547_c20243110159066.nc]. concatenate Datasets📚 Finished reading [24] files into xarray.Dataset.
DATA has been retrieved
Failed to parse PIREP: MTJ UA /OV MTJ250035/TM 0001/FL250/TP B738/SK TOP 240-250/TB CONT LGT CHOP 250 OCNL MOD/RM ZDVWC-12
Traceback (most recent call last):
  File "/skyblue/src/pirep/__init__.py", line 55, in parse
    report = PilotReport.parse(row["Report"], timestamp=row["Timestamp"])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/skyblue/src/pirep/defs/report.py", line 73, in parse
    entries = Turbulence.parse(val, altitude)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/skyblue/src/pirep/defs/turbulence.py", line 50, in parse
    altitude = Altitude.parse(m["altitude"])
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/skyblue/src/pirep/defs/altitude.py", line 55, in parse
    alt_min = max(0, int(alt) * 100 - 5000) #TODO magic number fixing
                     ^^^^^^^^
ValueError: invalid literal for int() with base 10: '250 OCNL MOD'

Failed to parse PIREP: VLA UA /OV VLA/TM 0100/FL220/TP E75L/TB MOD CHOP 250 DURD/RM /ZKCFDC /AF
Traceback (most recent call last):
  File "/skyblue/src/pirep/__init__.py", line 55, in parse
    report = PilotReport.parse(row["Report"], timestamp=row["Timestamp"])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/skyblue/src/pirep/defs/report.py", line 73, in parse
    entries = Turbulence.parse(val, altitude)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/skyblue/src/pirep/defs/turbulence.py", line 50, in parse
    altitude = Altitude.parse(m["altitude"])
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/skyblue/src/pirep/defs/altitude.py", line 55, in parse
    alt_min = max(0, int(alt) * 100 - 5000) #TODO magic number fixing
                     ^^^^^^^^
ValueError: invalid literal for int() with base 10: '250 DURD'

Parsed reports
LABELS have been retrieved
Number of training samples16
Number of testing samples8
Number of training samples12
Number of validation samples4
TRAINING GENERATOR
Length of train dataset: 5
TESTING GENERATOR
Length of test dataset: 3
VALIDATION GENERATIOB
Length of val dataset: 1
train: 5, test: 3, val: 1
About to run the hyperparameter tuning loop
Reloading Tuner from kt_tuning/hyperparameter_tuning/tuner0.json
About to do the tuner search

Search: Running Trial #3

Value             |Best Value So Far |Hyperparameter
128               |64                |lstm_units
0.4               |0.3               |dropout_rate
0.0015511         |0.00023848        |learning_rate
2                 |2                 |tuner/epochs
0                 |0                 |tuner/initial_epoch
2                 |2                 |tuner/bracket
0                 |0                 |tuner/round
16                |None              |filters

SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
Batch 0: X.shape=(2, 2, 1500, 2500, 6), Y.shape=(2, 2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
Batch 1: X.shape=(2, 2, 1500, 2500, 6), Y.shape=(2, 2, 1500, 2500, 14)
Epoch 1/10
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
Batch 3: X.shape=(2, 2, 1500, 2500, 6), Y.shape=(2, 2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
Batch 0: X.shape=(2, 2, 1500, 2500, 6), Y.shape=(2, 2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
Batch 4: X.shape=(2, 2, 1500, 2500, 6), Y.shape=(2, 2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
Batch 2: X.shape=(2, 2, 1500, 2500, 6), Y.shape=(2, 2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
Batch 1: X.shape=(2, 2, 1500, 2500, 6), Y.shape=(2, 2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
Batch 0: X.shape=(2, 2, 1500, 2500, 6), Y.shape=(2, 2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
Batch 0: X.shape=(2, 2, 1500, 2500, 6), Y.shape=(2, 2, 1500, 2500, 14)
5/5 - 399s - 80s/step - loss: nan - mean_absolute_error: nan - val_loss: nan - val_mean_absolute_error: nan
Epoch 2/10
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
Batch 4: X.shape=(2, 2, 1500, 2500, 6), Y.shape=(2, 2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
Batch 1: X.shape=(2, 2, 1500, 2500, 6), Y.shape=(2, 2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
Batch 2: X.shape=(2, 2, 1500, 2500, 6), Y.shape=(2, 2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
Batch 0: X.shape=(2, 2, 1500, 2500, 6), Y.shape=(2, 2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
Batch 3: X.shape=(2, 2, 1500, 2500, 6), Y.shape=(2, 2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
Batch 0: X.shape=(2, 2, 1500, 2500, 6), Y.shape=(2, 2, 1500, 2500, 14)
5/5 - 349s - 70s/step - loss: nan - mean_absolute_error: nan - val_loss: nan - val_mean_absolute_error: nan
Epoch 3/10
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
Batch 4: X.shape=(2, 2, 1500, 2500, 6), Y.shape=(2, 2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
Batch 2: X.shape=(2, 2, 1500, 2500, 6), Y.shape=(2, 2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
Batch 0: X.shape=(2, 2, 1500, 2500, 6), Y.shape=(2, 2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
Batch 3: X.shape=(2, 2, 1500, 2500, 6), Y.shape=(2, 2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
Batch 1: X.shape=(2, 2, 1500, 2500, 6), Y.shape=(2, 2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
Batch 0: X.shape=(2, 2, 1500, 2500, 6), Y.shape=(2, 2, 1500, 2500, 14)
5/5 - 349s - 70s/step - loss: nan - mean_absolute_error: nan - val_loss: nan - val_mean_absolute_error: nan
Epoch 4/10
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
Batch 0: X.shape=(2, 2, 1500, 2500, 6), Y.shape=(2, 2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
Batch 4: X.shape=(2, 2, 1500, 2500, 6), Y.shape=(2, 2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
Batch 2: X.shape=(2, 2, 1500, 2500, 6), Y.shape=(2, 2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
Batch 1: X.shape=(2, 2, 1500, 2500, 6), Y.shape=(2, 2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
Batch 3: X.shape=(2, 2, 1500, 2500, 6), Y.shape=(2, 2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
Batch 0: X.shape=(2, 2, 1500, 2500, 6), Y.shape=(2, 2, 1500, 2500, 14)
5/5 - 321s - 64s/step - loss: nan - mean_absolute_error: nan - val_loss: nan - val_mean_absolute_error: nan
Epoch 5/10
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
Batch 4: X.shape=(2, 2, 1500, 2500, 6), Y.shape=(2, 2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
Batch 3: X.shape=(2, 2, 1500, 2500, 6), Y.shape=(2, 2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
Batch 1: X.shape=(2, 2, 1500, 2500, 6), Y.shape=(2, 2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
Batch 0: X.shape=(2, 2, 1500, 2500, 6), Y.shape=(2, 2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
Batch 2: X.shape=(2, 2, 1500, 2500, 6), Y.shape=(2, 2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
Batch 0: X.shape=(2, 2, 1500, 2500, 6), Y.shape=(2, 2, 1500, 2500, 14)
5/5 - 321s - 64s/step - loss: nan - mean_absolute_error: nan - val_loss: nan - val_mean_absolute_error: nan
Epoch 6/10
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
Batch 3: X.shape=(2, 2, 1500, 2500, 6), Y.shape=(2, 2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
Batch 1: X.shape=(2, 2, 1500, 2500, 6), Y.shape=(2, 2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
Batch 0: X.shape=(2, 2, 1500, 2500, 6), Y.shape=(2, 2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
Batch 2: X.shape=(2, 2, 1500, 2500, 6), Y.shape=(2, 2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
Batch 4: X.shape=(2, 2, 1500, 2500, 6), Y.shape=(2, 2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
Batch 0: X.shape=(2, 2, 1500, 2500, 6), Y.shape=(2, 2, 1500, 2500, 14)
5/5 - 354s - 71s/step - loss: nan - mean_absolute_error: nan - val_loss: nan - val_mean_absolute_error: nan
Epoch 7/10
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
Batch 3: X.shape=(2, 2, 1500, 2500, 6), Y.shape=(2, 2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
Batch 2: X.shape=(2, 2, 1500, 2500, 6), Y.shape=(2, 2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
Batch 0: X.shape=(2, 2, 1500, 2500, 6), Y.shape=(2, 2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
Batch 1: X.shape=(2, 2, 1500, 2500, 6), Y.shape=(2, 2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
Batch 4: X.shape=(2, 2, 1500, 2500, 6), Y.shape=(2, 2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
Batch 0: X.shape=(2, 2, 1500, 2500, 6), Y.shape=(2, 2, 1500, 2500, 14)
5/5 - 319s - 64s/step - loss: nan - mean_absolute_error: nan - val_loss: nan - val_mean_absolute_error: nan
Epoch 8/10
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
Batch 0: X.shape=(2, 2, 1500, 2500, 6), Y.shape=(2, 2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
Batch 3: X.shape=(2, 2, 1500, 2500, 6), Y.shape=(2, 2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
Batch 2: X.shape=(2, 2, 1500, 2500, 6), Y.shape=(2, 2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
Batch 1: X.shape=(2, 2, 1500, 2500, 6), Y.shape=(2, 2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
Batch 4: X.shape=(2, 2, 1500, 2500, 6), Y.shape=(2, 2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
Batch 0: X.shape=(2, 2, 1500, 2500, 6), Y.shape=(2, 2, 1500, 2500, 14)
5/5 - 321s - 64s/step - loss: nan - mean_absolute_error: nan - val_loss: nan - val_mean_absolute_error: nan
Epoch 9/10
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
Batch 0: X.shape=(2, 2, 1500, 2500, 6), Y.shape=(2, 2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
Batch 3: X.shape=(2, 2, 1500, 2500, 6), Y.shape=(2, 2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
Batch 1: X.shape=(2, 2, 1500, 2500, 6), Y.shape=(2, 2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
Batch 2: X.shape=(2, 2, 1500, 2500, 6), Y.shape=(2, 2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
Batch 4: X.shape=(2, 2, 1500, 2500, 6), Y.shape=(2, 2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
Batch 0: X.shape=(2, 2, 1500, 2500, 6), Y.shape=(2, 2, 1500, 2500, 14)
5/5 - 317s - 63s/step - loss: nan - mean_absolute_error: nan - val_loss: nan - val_mean_absolute_error: nan
Epoch 10/10
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
Batch 2: X.shape=(2, 2, 1500, 2500, 6), Y.shape=(2, 2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
Batch 1: X.shape=(2, 2, 1500, 2500, 6), Y.shape=(2, 2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
Batch 4: X.shape=(2, 2, 1500, 2500, 6), Y.shape=(2, 2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
Batch 3: X.shape=(2, 2, 1500, 2500, 6), Y.shape=(2, 2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
Batch 0: X.shape=(2, 2, 1500, 2500, 6), Y.shape=(2, 2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
SHAPE XS: (2, 1500, 2500, 6)
SHAPE YS: (2, 1500, 2500, 14)
Batch 0: X.shape=(2, 2, 1500, 2500, 6), Y.shape=(2, 2, 1500, 2500, 14)
5/5 - 349s - 70s/step - loss: nan - mean_absolute_error: nan - val_loss: nan - val_mean_absolute_error: nan
